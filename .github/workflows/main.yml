name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pip==23.1.2 setuptools==67.8.0 wheel==0.40.0
          pip install -r artifacts/model/requirements.txt
          
      - name: Run tests
        run: |
          source venv/bin/activate
          OUTPUT=$(python test.py)
          echo "Test output: $OUTPUT"
          if [ "$OUTPUT" -ne 1 ]; then
            echo "Test failed. Stopping CI/CD."
            exit 1
          fi

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pwd
          ls -al
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG
          # aws lambda update-function-code --function-name testing2 --image-uri ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG
          echo "image=${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG" >> $GITHUB_OUTPUT
